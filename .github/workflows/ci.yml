name: CI

on:
  push:
    tags: [v*]
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

env:
  DOCKER_HOST_IP: 172.17.0.1
jobs:
  release:
    if: startsWith(github.ref, 'refs/tags/v')
    needs:
      - ci
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - name: Setup
        uses: actions/setup-go@v2
        with:
          go-version: 1.17

      - name: Release
        uses: goreleaser/goreleaser-action@v2
        with:
          args: release --rm-dist
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  ci:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - name: Setup
        uses: actions/setup-go@v2
        with:
          go-version: 1.17

      - name: Lint
        uses: golangci/golangci-lint-action@v2
        with:
          version: v1.43.0

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.PERSONAL_TOKEN }}

      - name: Test
        run: |
          go test -v -race -covermode=atomic -coverprofile=coverage.out ./...
          go tool cover -html=coverage.out -o coverage.html
        env:
          FLUENTBIT_CONFIG_VALIDATOR_API_KEY: ${{ secrets.FLUENTBIT_CONFIG_VALIDATOR_API_KEY }}
          FLUENTD_CONFIG_VALIDATOR_API_KEY: ${{ secrets.FLUENTD_CONFIG_VALIDATOR_API_KEY }}
          SMTP_USERNAME: ${{ secrets.MAILTRAP_USERNAME }}
          SMTP_PASSWORD: ${{ secrets.MAILTRAP_PASSWORD }}
          # This is a known limitation with github actions runners as they don't expose host.docker.internal properly.
          HOST_IP: ${{ env.DOCKER_HOST_IP }}

      - name: Upload coverage artifacts
        uses: actions/upload-artifact@v2
        with:
          name: coverage reports
          path: |
            coverage.out
            coverage.html
        continue-on-error: true

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v2.1.0
        with:
          file: ./coverage.out
          flags: ${{ runner.os }}
          token: ${{ secrets.CODECOV_TOKEN }}
        continue-on-error: true

      - uses: FranzDiebold/github-env-vars-action@v2

      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@v1.6
        with:
          args: >
            -Dsonar.organization=calyptia
            -Dsonar.projectKey=${{ env.CI_REPOSITORY_NAME_SLUG }}
            -Dsonar.sources=.
            -Dsonar.exclusions=**/*_test.go
            -Dsonar.tests=.
            -Dsonar.test.inclusions=**/*_test.go
            -Dsonar.go.coverage.reportPaths=coverage.out
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        continue-on-error: true