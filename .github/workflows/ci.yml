name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

env:
  DOCKER_HOST_IP: 172.17.0.1
jobs:
  ci:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup
        uses: actions/setup-go@v2
        with:
          go-version: 1.17

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ secrets.CI_USERNAME }}
          password: ${{ secrets.CI_PAT }}

      - name: Test
        run: |
          go test -v -race -covermode=atomic -coverprofile=coverage.out ./...
          go tool cover -html=coverage.out -o coverage.html
        env:
          FLUENTBIT_CONFIG_VALIDATOR_API_KEY: ${{ secrets.FLUENTBIT_CONFIG_VALIDATOR_API_KEY }}
          FLUENTD_CONFIG_VALIDATOR_API_KEY: ${{ secrets.FLUENTD_CONFIG_VALIDATOR_API_KEY }}
          SMTP_USERNAME: ${{ secrets.MAILTRAP_USERNAME }}
          SMTP_PASSWORD: ${{ secrets.MAILTRAP_PASSWORD }}
          # This is a known limitation with github actions runners as they don't expose host.docker.internal properly.
          HOST_IP: ${{ env.DOCKER_HOST_IP }}

      - name: Upload coverage artifacts
        uses: actions/upload-artifact@v2
        with:
          name: coverage reports
          path: |
            coverage.out
            coverage.html

      - name: Upload coverage to Codecov
        if: github.event_name != 'pull_request'
        uses: codecov/codecov-action@v2.1.0
        with:
          file: ./coverage.out
          flags: ${{ runner.os }}
          token: ${{ secrets.CODECOV_TOKEN }}

  component-test:
    name: Run component tests against Cloud image
    runs-on: ubuntu-latest
    steps:
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ secrets.CI_USERNAME }}
          password: ${{ secrets.CI_PAT }}

      - uses: actions/checkout@v3
        with:
          repository: calyptia/api
          token: ${{ secrets.CI_PAT }}

      - uses: actions/checkout@v3
        with:
          repository: calyptia/cloud
          token: ${{ secrets.CI_PAT }}
          ref: 'main'
          path: scripts/resources/cloud

      - run: |
          ./scripts/setup-tests.sh
          ./scripts/run-tests.sh
        shell: bash
        timeout-minutes: 10

      - name: Dump docker logs on failure
        if: failure()
        continue-on-error: true
        uses: jwalton/gh-docker-logs@v2
