name: Component test for API
# We use CI_USERNAME and CI_PAT organisation secrets for anything that requires it.
on:
  pull_request:
  workflow_dispatch:
  workflow_call:
    inputs:
      api-ref:
        description: The Github commit, SHA, branch or tag to use for the calyptia/api repository.
        type: string
        required: false
        default: 'main'
      cloud-ref:
        description: The Github commit, SHA, branch or tag to use for the calyptia/cloud repository.
        type: string
        required: false
        default: 'main'
      cloud-image-ref:
        description: The image tag for the ghcr.io/calyptia/cloud image.
        type: string
        required: false
        default: 'main' #${{ inputs.cloud-ref }}

jobs:
  schema-lint:
    name: Schema linting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          repository: calyptia/api
          token: ${{ secrets.CI_PAT }}
          ref: ${{ inputs.api-ref || github.ref || 'main' }}

      - run: docker run --rm -v $PWD:/spec redocly/openapi-cli lint spec/open-api.yml
        shell: bash

  schema-validation:
    name: Schema validation
    runs-on: ubuntu-latest
    steps:
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ secrets.CI_USERNAME }}
          password: ${{ secrets.CI_PAT }}

      - uses: actions/checkout@v2
        with:
          repository: calyptia/api
          token: ${{ secrets.CI_PAT }}
          ref: ${{ inputs.api-ref || github.ref || 'main' }}
          path: api

      - uses: actions/checkout@v2
        with:
          repository: calyptia/cloud
          token: ${{ secrets.CI_PAT }}
          ref: ${{ inputs.cloud-ref || 'main' }}
          path: cloud

      - name: Run up cloud support infrastructure
        # TODO: replace with all-in-one: https://github.com/calyptia/cloud/issues/308
        run: |
          docker-compose up -d
          docker run -d --network=host \
            --name cloud \
            -e DEBUG=true \
            -e DEFAULT_TOKEN_FILE=/api/token -v $PWD/../api:/api \
            ghcr.io/calyptia/cloud:$IMAGE_TAG
        shell: bash
        working-directory: cloud
        env:
          IMAGE_TAG: ${{ inputs.cloud-image-ref || 'main' }}

      - name: Wait for infrastructure set up to complete
        # TODO: Again, part of all-in-one
        timeout-minutes: 2
        run:
          until [[ $(curl -sL --write-out %{http_code} http://localhost:5000/healthz -o /dev/null) -eq 200 ]] ; do
            sleep 1
          done
          echo "Container responding"
        shell: bash

      - name: Check we have a token file
        timeout-minutes: 1
        run: |
          until [ -f token ]; do
            sleep 1
          done
          echo "Found token file"
        working-directory: api
        shell: bash

      - name: Run up the schema validation container
        run: |
          TOKEN=$(cat ./token)
          docker run --network=host -v $PWD/spec/:/spec \
            schemathesis/schemathesis:stable \
              run \
              --header "Authorization:" \
              --header "X-Project-Token:$TOKEN" \
              --stateful=links \
              --workers 8 \
              /spec/open-api.yml \
              --base-url=http://localhost:5000/
        shell: bash
        working-directory: api

      - name: Dump docker logs on failure
        if: failure()
        continue-on-error: true
        uses: jwalton/gh-docker-logs@v1
