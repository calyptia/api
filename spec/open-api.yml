openapi: 3.0.3
info:
  title: Calyptia Cloud API
  version: "1.0"
  description: HTTP API service of Calyptia Cloud
  contact:
    name: Calyptia
    email: hello@calyptia.com
    url: "https://cloud.calyptia.com"
  termsOfService: "https://calyptia.com/terms/"
servers:
  - url: "http://localhost:{port}"
    description: local
    variables:
      port:
        default: "5000"
  - url: "https://cloud-api-dev.calyptia.com"
    description: dev
  - url: "https://cloud-api-prod.calyptia.com"
    description: prod
tags:
  - name: user
  - name: project
  - name: token
  - name: membership
  - name: invitation
  - name: agent
  - name: agent_config
  - name: aggregator
  - name: resource_profile
  - name: pipeline
  - name: pipeline_config
  - name: pipeline_status
  - name: pipeline_file
  - name: pipeline_secret
  - name: pipeline_port
  - name: metric
components:
  securitySchemes:
    user:
      type: http
      scheme: bearer
    project:
      name: X-Project-Token
      type: apiKey
      in: header
  schemas:
    User:
      type: object
      description: User model.
      properties:
        id:
          type: string
          format: uuid
        email:
          type: string
          format: email
        name:
          type: string
          example: user
        avatarURL:
          type: string
          nullable: true
          format: uri
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - id
        - email
        - name
        - avatarURL
        - createdAt
        - updatedAt
    Project:
      type: object
      description: Project model.
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          example: my-project
        membersCount:
          type: integer
          minimum: 1
          format: int64
        agentsCount:
          type: integer
          format: int64
          minimum: 0
        aggregatorsCount:
          type: integer
          format: int64
          maximum: 0
        createdAt:
          type: string
          format: date-time
        membership:
          $ref: "#/components/schemas/Membership"
      required:
        - id
        - name
        - membersCount
        - agentsCount
        - aggregatorsCount
        - createdAt
    Token:
      type: object
      properties:
        id:
          type: string
          format: uuid
        token:
          type: string
          example: redacted
        name:
          type: string
          example: my-token
        createdAt:
          type: string
          format: date-time
      required:
        - id
        - token
        - name
        - createdAt
      description: Token model.
    Membership:
      type: object
      properties:
        id:
          type: string
          format: uuid
        roles:
          type: array
          nullable: true
          uniqueItems: true
          items:
            type: string
            enum:
              - creator
              - admin
        createdAt:
          type: string
          format: date-time
        user:
          $ref: "#/components/schemas/User"
      required:
        - id
        - roles
        - createdAt
      description: Membership of a user in a project.
    Invitation:
      type: object
      description: Invitation to a project.
      properties:
        id:
          type: string
          format: uuid
        email:
          type: string
          format: email
        createdAt:
          type: string
          format: date-time
      required:
        - id
        - email
        - createdAt
    Agent:
      type: object
      properties:
        id:
          type: string
          format: uuid
        token:
          type: string
          example: redacted
        name:
          type: string
          example: my-agent
          format: hostname
        machineID:
          type: string
        type:
          type: string
          enum:
            - fluentbit
            - fluentd
        version:
          type: string
          example: v1.8.6
        edition:
          type: string
          enum:
            - community
            - enterprise
        flags:
          type: array
          nullable: true
          uniqueItems: true
          items:
            type: string
        rawConfig:
          type: string
        metadata:
          type: object
          nullable: true
        firstMetricsAddedAt:
          type: string
          format: date-time
        lastMetricsAddedAt:
          type: string
          format: date-time
        metricsCount:
          type: integer
          format: int64
          minimum: 0
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - id
        - token
        - name
        - machineID
        - type
        - version
        - edition
        - flags
        - rawConfig
        - metadata
        - firstMetricsAddedAt
        - lastMetricsAddedAt
        - metricsCount
        - createdAt
        - updatedAt
      description: Agent model.
    AgentConfig:
      type: object
      description: Agent configuration history entry.
      properties:
        id:
          type: string
          format: uuid
        rawConfig:
          type: string
        createdAt:
          type: string
          format: date-time
      required:
        - id
        - rawConfig
        - createdAt
    Aggregator:
      type: object
      description: Aggregator model.
      properties:
        id:
          type: string
          format: uuid
        token:
          type: string
          example: redacted
        name:
          type: string
          example: my-aggregator
        pipelinesCount:
          type: integer
          format: int64
          minimum: 0
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - id
        - token
        - name
        - pipelinesCount
        - createdAt
        - updatedAt
    ResourceProfile:
      type: object
      description: Resource profile model.
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          example: my-resource-profile
        storageMaxChunksUp:
          type: integer
          format: int32
        storageSyncFull:
          type: boolean
        storageBacklogMemLimit:
          type: string
          example: 1Mi
        storageVolumeSize:
          type: string
          example: 2Mi
        storageMaxChunksPause:
          type: boolean
        cpuBufferWorkers:
          type: integer
          format: int32
        cpuLimit:
          type: string
          example: 3Mi
        cpuRequest:
          type: string
          example: 4Mi
        memoryLimit:
          type: string
          example: 5Mi
        memoryRequest:
          type: string
          example: 6Mi
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - id
        - name
        - storageMaxChunksUp
        - storageSyncFull
        - storageBacklogMemLimit
        - storageVolumeSize
        - storageMaxChunksPause
        - cpuBufferWorkers
        - cpuLimit
        - cpuRequest
        - memoryLimit
        - memoryRequest
        - createdAt
        - updatedAt
    Pipeline:
      type: object
      description: Pipeline model.
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          example: my-pipeline
        config:
          $ref: "#/components/schemas/PipelineConfig"
        status:
          $ref: "#/components/schemas/PipelineStatus"
        resourceProfile:
          $ref: "#/components/schemas/ResourceProfile"
        replicasCount:
          type: integer
          format: int64
          minimum: 0
        metadata:
          type: object
          nullable: true
          properties:
            nodeSelector:
              type: object
              nullable: true
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - id
        - name
        - config
        - status
        - resourceProfile
        - replicasCount
        - metadata
        - createdAt
        - updatedAt
    PipelineConfig:
      type: object
      description: Pipeline configuration history entry.
      properties:
        id:
          type: string
          format: uuid
        rawConfig:
          type: string
        createdAt:
          type: string
          format: date-time
      required:
        - id
        - rawConfig
        - createdAt
    PipelineStatus:
      type: object
      description: Pipeline status history entry.
      properties:
        id:
          type: string
          format: uuid
        config:
          $ref: "#/components/schemas/AgentConfig"
        status:
          type: string
          enum:
            - NEW
            - FAILED
            - STARTING
            - STARTED
            - DELETED
        createdAt:
          type: string
          format: date-time
      required:
        - id
        - config
        - status
        - createdAt
    PipelineFile:
      type: object
      description: Pipeline file model.
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          example: myfile
        contents:
          type: string
          format: byte
        encrypted:
          type: boolean
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - id
        - name
        - contents
        - encrypted
        - createdAt
        - updatedAt
    PipelineSecret:
      type: object
      description: Pipeline secret model.
      properties:
        id:
          type: string
          format: uuid
        key:
          type: string
          example: mysecret
        value:
          type: string
          format: byte
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - id
        - key
        - value
        - createdAt
        - updatedAt
    PipelinePort:
      type: object
      description: Pipeline port model.
      properties:
        id:
          type: string
          format: uuid
        protocol:
          type: string
          example: tcp
        frontendPort:
          type: integer
          format: int32
          minimum: 0
        backendPort:
          type: integer
          format: int32
          minimum: 0
        endpoint:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - id
        - protocol
        - frontendPort
        - backendPort
        - endpoint
        - createdAt
        - updatedAt
    ProjectMetrics:
      type: object
      description: Project metrics model.
      properties:
        measurements:
          type: object
          additionalProperties:
            type: object
            properties:
              totals:
                type: object
                additionalProperties:
                  type: number
                  nullable: true
                  format: float
              plugins:
                type: object
                additionalProperties:
                  $ref: "#/components/schemas/Metrics"
            required:
              - totals
              - plugins
        topPlugins:
          type: object
          additionalProperties:
            type: object
            additionalProperties:
              type: number
              nullable: true
              format: float
      required:
        - measurements
        - topPlugins
    AgentMetrics:
      type: object
      description: Agent metrics model.
      properties:
        measurements:
          type: object
          additionalProperties:
            type: object
            properties:
              plugins:
                type: object
                additionalProperties:
                  $ref: "#/components/schemas/Metrics"
              totals:
                type: object
                additionalProperties:
                  type: array
                  items:
                    $ref: "#/components/schemas/MetricFields"
            required:
              - plugins
              - totals
      required:
        - measurements
    Metrics:
      type: object
      description: Metrics model.
      properties:
        metrics:
          type: object
          additionalProperties:
            type: array
            items:
              $ref: "#/components/schemas/MetricFields"
      required:
        - metrics
    MetricFields:
      type: object
      description: Metric fields model.
      properties:
        time:
          type: string
          format: date-time
        value:
          type: number
          nullable: true
          format: float
      required:
        - time
        - value
    CreateProject:
      description: Create project request body.
      type: object
      properties:
        name:
          type: string
          example: new-project
      required:
        - name
    UpdateProject:
      description: Update project request body.
      type: object
      properties:
        name:
          type: string
          example: new-project
          nullable: true
    CreateToken:
      description: Create token request body.
      type: object
      properties:
        name:
          type: string
          example: new-token
      required:
        - name
    UpdateToken:
      description: Update token request body.
      type: object
      properties:
        name:
          type: string
          example: new-token
          nullable: true
    CreateInvitation:
      description: Create invitation request body.
      type: object
      properties:
        email:
          type: string
          format: email
        redirectURI:
          type: string
          format: uri
      required:
        - email
        - redirectURI
    AcceptInvitation:
      description: Accept invitation request body.
      type: object
      properties:
        token:
          type: string
          example: redacted
      required:
        - token
    RegisterAgent:
      description: Register agent request body.
      type: object
      properties:
        name:
          type: string
          example: new-agent
          format: hostname
        machineID:
          type: string
        type:
          type: string
          enum:
            - fluentbit
            - fluentd
        version:
          type: string
          example: v1.8.6
        edition:
          type: string
          enum:
            - community
            - enterprise
        flags:
          type: array
          nullable: true
          items:
            type: string
        rawConfig:
          type: string
        metadata:
          type: object
          nullable: true
      required:
        - name
        - machineID
        - type
        - version
        - edition
        - flags
        - rawConfig
    UpdateAgent:
      description: Update agent request body.
      type: object
      properties:
        name:
          type: string
          example: new-agent
          format: hostname
          nullable: true
        version:
          type: string
          example: v1.8.6
          nullable: true
        edition:
          type: string
          enum:
            - community
            - enterprise
          nullable: true
        flags:
          type: array
          nullable: true
          items:
            type: string
        rawConfig:
          type: string
          nullable: true
        metadata:
          type: object
          nullable: true
    CreateAggregator:
      description: Create aggregator request body.
      type: object
      properties:
        name:
          type: string
          example: new-aggregator
        addHealthCheckPipeline:
          type: boolean
        healthCheckPipelinePort:
          type: integer
          format: int32
          minimum: 0
      required:
        - name
        - addHealthCheckPipeline
        - healthCheckPipelinePort
    UpdateAggregator:
      description: Update aggregator request body.
      type: object
      properties:
        name:
          type: string
          example: new-aggregator
          nullable: true
    CreateResourceProfile:
      description: Create resource profile request body.
      type: object
      properties:
        name:
          type: string
          example: my-resource-profile
        storageMaxChunksUp:
          type: integer
          format: int32
        storageSyncFull:
          type: boolean
        storageBacklogMemLimit:
          type: string
          example: 1Mi
        storageVolumeSize:
          type: string
          example: 2Mi
        storageMaxChunksPause:
          type: boolean
        cpuBufferWorkers:
          type: integer
          format: int32
        cpuLimit:
          type: string
          example: 3Mi
        cpuRequest:
          type: string
          example: 4Mi
        memoryLimit:
          type: string
          example: 5Mi
        memoryRequest:
          type: string
          example: 6Mi
      required:
        - name
        - storageMaxChunksUp
        - storageSyncFull
        - storageBacklogMemLimit
        - storageVolumeSize
        - storageMaxChunksPause
        - cpuBufferWorkers
        - cpuLimit
        - cpuRequest
        - memoryLimit
        - memoryRequest
    UpdateResourceProfile:
      description: Update resource profile request body.
      type: object
      properties:
        name:
          type: string
          example: my-resource-profile
          nullable: true
        storageMaxChunksUp:
          type: integer
          format: int32
          nullable: true
        storageSyncFull:
          type: boolean
          nullable: true
        storageBacklogMemLimit:
          type: string
          example: 1Mi
          nullable: true
        storageVolumeSize:
          type: string
          example: 2Mi
          nullable: true
        storageMaxChunksPause:
          type: boolean
          nullable: true
        cpuBufferWorkers:
          type: integer
          format: int32
          nullable: true
        cpuLimit:
          type: string
          example: 3Mi
          nullable: true
        cpuRequest:
          type: string
          example: 4Mi
          nullable: true
        memoryLimit:
          type: string
          example: 5Mi
          nullable: true
        memoryRequest:
          type: string
          example: 6Mi
          nullable: true
    CreatePipeline:
      description: Create pipeline request body.
      type: object
      properties:
        name:
          type: string
          example: new-pipeline
        replicasCount:
          type: integer
          format: int64
          minimum: 0
        rawConfig:
          type: string
        secrets:
          type: array
          nullable: true
          items:
            $ref: "#/components/schemas/CreatePipelineSecret"
        files:
          type: array
          nullable: true
          items:
            $ref: "#/components/schemas/CreatePipelineFile"
        resourceProfile:
          type: string
          example: my-resource-profile
        autoCreatePortsFromConfig:
          type: boolean
        metadata:
          type: object
          nullable: true
          properties:
            nodeSelector:
              type: object
              nullable: true
      required:
        - name
        - replicasCount
        - rawConfig
        - secrets
        - files
        - resourceProfile
        - autoCreatePortsFromConfig
    UpdatePipeline:
      description: Update pipeline request body.
      type: object
      properties:
        name:
          type: string
          example: new-pipeline
          nullable: true
        replicasCount:
          type: integer
          format: int64
          nullable: true
        rawConfig:
          type: string
          nullable: true
        secrets:
          type: array
          nullable: true
          items:
            $ref: "#/components/schemas/UpdatePipelineSecret"
        files:
          type: array
          nullable: true
          items:
            $ref: "#/components/schemas/UpdatePipelineFile"
        resourceProfile:
          type: string
          example: my-resource-profile
          nullable: true
        autoCreatePortsFromConfig:
          type: boolean
          nullable: true
        metadata:
          type: object
          nullable: true
          properties:
            nodeSelector:
              type: object
              nullable: true
    CreatePipelineFile:
      description: Create pipeline file request body.
      type: object
      properties:
        name:
          type: string
          example: newfile
        contents:
          type: string
          format: byte
        encrypted:
          type: boolean
      required:
        - name
        - contents
        - encrypted
    UpdatePipelineFile:
      description: Update pipeline file request body.
      type: object
      properties:
        name:
          type: string
          example: newfile
          nullable: true
        contents:
          type: string
          format: byte
          nullable: true
        encrypted:
          type: boolean
          nullable: true
    CreatePipelineSecret:
      description: Create pipeline secret request body.
      type: object
      properties:
        key:
          type: string
          example: newsecret
        value:
          type: string
          format: byte
      required:
        - key
        - value
    UpdatePipelineSecret:
      description: Update pipeline secret request body.
      type: object
      properties:
        key:
          type: string
          example: newsecret
          nullable: true
        value:
          type: string
          format: byte
          nullable: true
    CreatePipelinePort:
      description: Create pipeline port request body.
      type: object
      properties:
        protocol:
          type: string
          example: tcp
        frontendPort:
          type: integer
          format: int32
          minimum: 0
        backendPort:
          type: integer
          format: int32
          minimum: 0
        endpoint:
          type: string
      required:
        - protocol
        - frontendPort
        - backendPort
        - endpoint
    UpdatePipelinePort:
      description: Update pipeline port request body.
      type: object
      properties:
        protocol:
          type: string
          example: tcp
          nullable: true
        frontendPort:
          type: integer
          format: int32
          nullable: true
        backendPort:
          type: integer
          format: int32
          nullable: true
        endpoint:
          type: string
          nullable: true
    CreatedProject:
      type: object
      description: Created project response body.
      properties:
        id:
          type: string
        token:
          type: string
          example: redacted
        createdAt:
          type: string
          format: date-time
        membership:
          $ref: "#/components/schemas/Membership"
      required:
        - id
        - token
        - createdAt
        - membership
    RegisteredAgent:
      type: object
      description: Registered agent response body.
      properties:
        id:
          type: string
          format: uuid
        token:
          type: string
          example: redacted
        name:
          type: string
          example: my-agent
        createdAt:
          type: string
          format: date-time
      required:
        - id
        - token
        - name
        - createdAt
    CreatedAggregator:
      type: object
      description: Created aggregator response body.
      properties:
        id:
          type: string
          format: uuid
        token:
          type: string
          example: redacted
        privateRSAKey:
          type: string
          format: byte
        publicRSAKey:
          type: string
          format: byte
        name:
          type: string
          example: my-aggregator
        createdAt:
          type: string
          format: date-time
        healthCheckPipeline:
          $ref: "#/components/schemas/Pipeline"
        resourceProfiles:
          type: array
          items:
            $ref: "#/components/schemas/ResourceProfile"
      required:
        - id
        - token
        - privateRSAKey
        - publicRSAKey
        - name
        - createdAt
        - resourceProfiles
    CreatedResourceProfile:
      type: object
      description: Created resource profile response body.
      properties:
        id:
          type: string
          format: uuid
        createdAt:
          type: string
          format: date-time
      required:
        - id
        - createdAt
    CreatedPipeline:
      type: object
      description: Created pipeline response body.
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          example: my-pipeline
        config:
          $ref: "#/components/schemas/PipelineConfig"
        secrets:
          type: array
          items:
            $ref: "#/components/schemas/PipelineSecret"
        files:
          type: array
          items:
            $ref: "#/components/schemas/PipelineFile"
        status:
          $ref: "#/components/schemas/PipelineStatus"
        resourceProfile:
          $ref: "#/components/schemas/ResourceProfile"
        replicasCount:
          type: integer
          format: int64
          minimum: 0
        createdAt:
          type: string
          format: date-time
    UpdatedPipeline:
      type: object
      description: Updated pipeline response body.
      properties:
        addedPorts:
          type: array
          items:
            $ref: "#/components/schemas/PipelinePort"
    CreatedPipelineFile:
      type: object
      description: Created pipeline file response body.
      properties:
        id:
          type: string
          format: uuid
        createdAt:
          type: string
          format: date-time
      required:
        - id
        - createdAt
    CreatedPipelineSecret:
      type: object
      description: Created pipeline secret response body.
      properties:
        id:
          type: string
          format: uuid
        createdAt:
          type: string
          format: date-time
      required:
        - id
        - createdAt
    CreatedPipelinePort:
      type: object
      description: Created pipeline port response body.
      properties:
        id:
          type: string
          format: uuid
        createdAt:
          type: string
          format: date-time
      required:
        - id
        - createdAt
paths:
  /v1/verification_email:
    post:
      tags:
        - user
      summary: Send verification email
      operationId: sendVerificationEmail
      description: |-
        Sends a verification email to the user.
        When a new user registers within Calyptia Cloud with password, it should receive a verification email, in the case it didn't receive it, or the email expired already, use this endpoint to request a new one.
      security:
        - user: []
      responses:
        "204":
          description: No Content
  /v1/projects:
    get:
      tags:
        - project
      summary: Projects
      operationId: projects
      description: Projects you are a member of in descending order.
      security:
        - user: []
      parameters:
        - schema:
            type: integer
            format: int64
            minimum: 0
          in: query
          name: last
          description: Last projects
        - schema:
            type: string
          in: query
          name: name
          description: Name matching projects
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Project"
    post:
      tags:
        - project
      summary: Create project
      operationId: createProject
      description: |-
        Creates a new project.
        A project is the base unit of work at Calyptia Cloud.
        You can register agents here, create aggregators in which you can deploy an entire set of pipelines, and monitor them.
        You can even invite other people to the project and have a team.
      security:
        - user: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateProject"
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreatedProject"
  "/v1/projects/{projectID}":
    parameters:
      - schema:
          type: string
          format: uuid
        name: projectID
        in: path
        required: true
    get:
      tags:
        - project
      summary: Project
      operationId: Project
      description: Project by ID.
      security:
        - user: []
        - project: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Project"
    patch:
      tags:
        - project
      summary: Update project
      operationId: updateProject
      description: Update project by its ID.
      security:
        - user: []
        - project: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateProject"
      responses:
        "204":
          description: No Content
